-- SET OPERATORS
-- USED TO COMBINE MORE THAN TWO SELECT STATEMENTS
-- UNION
-- UNION ALL
-- INTERSECT
-- EXCEPT

-- RULES TO FOLLOW
                 -- BOTH SELECT STATEMENT CONTAINS SAME NUMBER OF COLUMNS
                 -- ORDER OF THE COLUMNS SHOULD BE SAME
                 -- DATA TYPES OF THE COLUMN MUST BE SAME

DROP TABLE SAMP1;
use Demo;
CREATE TABLE SAMP1(ID INT,FULLNAME VARCHAR(40),SALARY DECIMAL(8,2));
CREATE TABLE SAMP2(ID INT,FULLNAME VARCHAR(40),SALARY DECIMAL(8,2));

INSERT INTO SAMP1 VALUES(1,'Mansmithi',50000),(2,'james',45000),
(3,'Raju',36000);

SELECT * FROM SAMP1;

INSERT INTO SAMP2 VALUES(1,'Vanmathi',60000),(2,'Ganga',25000),
(3,'Raju',36000),(4,'Yieleyanna',44000);

DROP TABLE SAMP2;
SELECT * FROM SAMP2;



-- UNION MEANT:
--         COMBINE THE RESULT OF TWO OR MORE THAN TWO SELECT STATEMENTS
--         AS  A SINGLE UNIT OF VALUES WITHOUT DUPLICATE VALUES

SELECT * FROM SAMP1
UNION 
SELECT * FROM SAMP2;

SELECT FULLNAME , ID FROM SAMP1
UNION 
SELECT FULLNAME,ID FROM SAMP2;

-- UNION ALL 
        --  COMBINED THE RESULT OF TWO OR MORE TABLES
        -- WITH DUPLICATES
        
SELECT * FROM SAMP1
UNION ALL
SELECT * FROM SAMP2;

-- INTERSECT ---- > THIS IS NOT SUPPORTED BY MYSQL
-- WE CAN ACHIEVE THIS USING 
-- INNER JOIN AND EXISTS

SELECT * FROM SAMP1
WHERE EXISTS
(
SELECT 1 FROM SAMP2
WHERE 
SAMP1.ID = SAMP2.ID
AND
SAMP2.FULLNAME = SAMP1.FULLNAME
);


SELECT SAMP1.ID,SAMP1.FULLNAME FROM SAMP1
INNER JOIN SAMP2 ON 
SAMP2.ID = SAMP1.ID AND SAMP1.FULLNAME=SAMP2.FULLNAME;
 
 
 -- EXCEPT --- TO RETURNS THE VALUES FROM THE LEFT HAND SIDE TABLE 
 -- WHICH ARE NOT FOUND IN THE RIGHT HAND TABLE





-- CONCLUSIONS
               -- UNION     
                         -- --> RETURN THE RESULT OF TWO SELECT STATEMENT
                         -- --> IT RETURNS ONLY ONE TIME IF DUPLICATES ARE THERE
                         -- --> IT GIVE UNIQUE VALUE OF BOTH THE SELECT STATEMENT
               -- UNION ALL
                        -- ---> RETURN THE RESULT OF TWO SELECT STATEMENT
                        -- ---> THIS RETURN ALONG WITH DUPLICATE VALUES
                        -- ---> IT RETURN ALL THE VALUES ALONG WITH DUPLICATES
                        
               -- INTERSECT ----> EXISTS,INNER JOIN
                        -- ----> IN MYSQL INTERSECT IS NOT SUPPORTED
                        -- ----> WE CAN USE EXISTS AND INNER JOIN 
                        -- ----> BY USING ABOVE WE CAN DISPLAY THE COMMON RECORDS
                        -- ----> IN BOTH THE TABLE
                        
				 -- INNER JOIN
                        SELECT SAMP1.ID,SAMP2.FULLNAME,SAMP1.SALARY FROM SAMP1
                        INNER JOIN SAMP2
                        ON SAMP1.ID=SAMP2.ID AND SAMP1.FULLNAME=SAMP2.FULLNAME;
                        
				  -- EXISTS
                        SELECT * FROM SAMP1
                        WHERE EXISTS
                        (
                        SELECT * FROM SAMP2
                        WHERE SAMP2.ID = SAMP1.ID
                        AND 
                        SAMP2.FULLNAME = SAMP1.FULLNAME
                        );
			
               






